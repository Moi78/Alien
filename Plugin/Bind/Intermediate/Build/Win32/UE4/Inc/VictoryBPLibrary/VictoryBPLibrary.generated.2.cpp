// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Generated code exported from UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "GeneratedCppIncludes.h"
#include "Private/VictoryBPLibraryPrivatePCH.h"
#include "VictoryBPLibrary.generated.dep.h"
PRAGMA_DISABLE_OPTIMIZATION
#ifdef _MSC_VER
#pragma warning (push)
#pragma warning (disable : 4883)
#endif
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode2VictoryBPLibrary() {}
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	SLATECORE_API class UScriptStruct* Z_Construct_UScriptStruct_FMargin();
	SLATE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnchors();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPrimitiveComponent_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FBox();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector2D();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UClass* Z_Construct_UClass_UInstancedStaticMeshComponent_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FRotator();
	INPUTCORE_API class UScriptStruct* Z_Construct_UScriptStruct_FKey();
	ENGINE_API class UClass* Z_Construct_UClass_USkeletalMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerController_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ASceneCapture2D_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FLinearColor();
	ENGINE_API class UClass* Z_Construct_UClass_USceneCaptureComponent2D_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ACharacter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AStaticMeshActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMeshComponent_NoRegister();
	COREUOBJECT_API class UEnum* Z_Construct_UEnum_CoreUObject_ESearchCase();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FPlane();
	ENGINE_API class UClass* Z_Construct_UClass_UTextureRenderTarget2D_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialInterface_NoRegister();
	UMG_API class UClass* Z_Construct_UClass_UUserWidget_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USceneComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ULevelStreamingKismet_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerStart_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundWave_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMeshComponent_NoRegister();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FHitResult();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECollisionChannel();
	UMG_API class UClass* Z_Construct_UClass_UWidget_NoRegister();
	COREUOBJECT_API class UEnum* Z_Construct_UEnum_CoreUObject_ESearchDir();
	UMG_API class UClass* Z_Construct_UClass_UPanelSlot_NoRegister();
	SLATECORE_API class UScriptStruct* Z_Construct_UScriptStruct_FKeyEvent();
	ENGINE_API class UClass* Z_Construct_UClass_UTexture2D_NoRegister();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EComponentMobility();
	ENGINE_API class UClass* Z_Construct_UClass_USoundAttenuation_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAudioComponent_NoRegister();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAttachLocation();
	ENGINE_API class UClass* Z_Construct_UClass_APostProcessVolume_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UActorComponent_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FDateTime();
	AIMODULE_API class UEnum* Z_Construct_UEnum_AIModule_EPathFollowingRequestResult();
	ENGINE_API class UClass* Z_Construct_UClass_UNavigationQueryFilter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APawn_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDestructibleComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundClass_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ULevelStreaming_NoRegister();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EInputEvent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSubtitleCue();
	ENGINE_API class UClass* Z_Construct_UClass_USoundBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerController();
	ENGINE_API class UClass* Z_Construct_UClass_UActorComponent();

	VICTORYBPLIBRARY_API class UEnum* Z_Construct_UEnum_VictoryBPLibrary_ESpeedUnit();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_AreLineSegmentsCrossing();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_ClosestPointOnLineSeqment();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_ClosestPointOnSphereToLine();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_ClosestPointsOfLineSegments();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_ClosestPointsOnTwoLines();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_ConvertAnchorToAnchor();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_ConvertPhysicsLinearVelocity();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_GetConsoleVariableFloat();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_GetConsoleVariableInt();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_GetVelocityAtPoint();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_GridSnap();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_IsEvenNumber();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_IsLineInsideSphere();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_IsMultipleOf();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_IsPointInsideBox();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_IsPowerOfTwo();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_LineExtentBoxIntersection();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_LineToLineIntersection();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_NegateFloat();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_NegateInt();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_NegateVector2D();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_PointOnWhichSideOfLineSegment();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_ProjectPointOnLine();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_RoundToLowerMultiple();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_RoundToNearestMultiple();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_RoundToUpperMultiple();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_SetCenterOfMassOffset();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_SetVectorLength();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_SignedDistancePlanePoint();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_SphereBoxIntersection();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_VectorDegreesToRadians();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UTKMathFunctionLibrary_VectorRadiansToDegrees();
	VICTORYBPLIBRARY_API class UClass* Z_Construct_UClass_UTKMathFunctionLibrary_NoRegister();
	VICTORYBPLIBRARY_API class UClass* Z_Construct_UClass_UTKMathFunctionLibrary();
	VICTORYBPLIBRARY_API class UClass* Z_Construct_UClass_AVictoryISM_NoRegister();
	VICTORYBPLIBRARY_API class UClass* Z_Construct_UClass_AVictoryISM();
	VICTORYBPLIBRARY_API class UEnum* Z_Construct_UEnum_VictoryBPLibrary_EJoyGraphicsFullScreen();
	VICTORYBPLIBRARY_API class UEnum* Z_Construct_UEnum_VictoryBPLibrary_EVictoryHMDDevice();
	VICTORYBPLIBRARY_API class UEnum* Z_Construct_UEnum_VictoryBPLibrary_EJoyImageFormats();
	VICTORYBPLIBRARY_API class UScriptStruct* Z_Construct_UScriptStruct_FLevelStreamInstanceInfo();
	VICTORYBPLIBRARY_API class UScriptStruct* Z_Construct_UScriptStruct_FVictoryInputAxis();
	VICTORYBPLIBRARY_API class UScriptStruct* Z_Construct_UScriptStruct_FVictoryInput();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Accessor__GetCharacterSkeletalMesh();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Accessor__GetNameAsString();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Accessor__GetPlayerController();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Actor__GetAttachedActors();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Actor__TeleportToActor();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Actor_PrestreamTextures();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_AddToActorRotation();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_AddToStreamingLevels();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_AnimatedVertex__GetAnimatedVertexLocations();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Animation__GetAimOffsets();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Animation__GetAimOffsetsFromRotation();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_AppendMultiple();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Array_IsValidIndex();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Array_Sort();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Calcs__ClosestPointToSourcePoint();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Capture2D_Project();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Capture2D_SaveImage();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_CaptureComponent2D_Project();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_CaptureComponent2D_SaveImage();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Character__GetControllerRotation();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_CharacterMovement__SetMaxMoveSpeed();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_ClientWindow__GameWindowIsForeGroundInOS();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Clone__StaticMeshActor();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_CompareMD5Hash();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Component_PrestreamTextures();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_constructRand();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Conversion__FloatToRoundedInteger();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Conversions__ColorToString();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Conversions__RotatorToVector();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Conversions__StringToColor();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Conversions__StringToRotator();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Conversions__StringToVector();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Conversions__VectorToRotator();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_CountOccurrancesOfSubString();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_CreateMD5Hash();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_CreateObject();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_CreatePlane();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_CreatePrimitiveComponent();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_CreateTextureRenderTarget2D();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Data__GetCharacterBoneLocations();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_DistanceToSurface__DistaceOfPointToMeshSurface();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_DoesMaterialHaveParameter();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Draw__Thick3DLineBetweenActors();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Draw__Thick3DLineFromCharacterSocket();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Draw__Thick3DLineFromSocket();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_DrawCircle();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_EqualEqual_Vector2DVector2D();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_FileIO__SaveStringArrayToFile();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_FileIO__SaveStringTextToFile();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_FlashGameOnTaskBar();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_FlushPressedKeys();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetActorRelativeLocation();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetActorRelativeRotation();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetAllBoneNamesBelowBone();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetAllWidgetsOfClass();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetBoxContainingWorldPoints();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetClosestActorOfClassInRadiusOfActor();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetClosestActorOfClassInRadiusOfLocation();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetCommandLine();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetComponentRelativeLocation();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetComponentRelativeRotation();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetCreationTime();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetDistanceBetweenComponentSurfaces();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetDistanceToCollision();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetFirstWidgetOfClass();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetGenericTeamId();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetHeadMountedDisplayDeviceType();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetLevelInstanceInfo();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetNamesOfLoadedLevels();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetObjectPath();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetPlayerStart();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetPlayerUniqueNetID();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetRotatorRelativeRotation();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetSoundWaveFromFile();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetStaticMeshVertexLocations();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetTimeAlive();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetTimeInPlay();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetUserDisplayAdapterBrand();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetVectorRelativeLocation();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetViewportPosition();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetViewportPositionHitResultByChannel();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GetWidgetFromName();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GraphicsSettings__SetFrameRateCap();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_GraphicsSettings__SetFrameRateToBeUnbound();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_HasSubstring();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_HideStreamingLevel();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_HorizontalFOV();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_InsertChildAt();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_IsAlphaNumeric();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_IsPointOnPlane();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_IsStandAlone();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_IsWidgetOfClassInViewport();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_JoyFileIO_GetFiles();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_JoyFileIO_GetFilesInRootAndAllSubFolders();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_JoyGraphicsSettings__FullScreen_Get();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_JoyGraphicsSettings__FullScreen_Set();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_JoyIsKey();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_LensFlare__GetLensFlareOffsets();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_LoadObjectFromAssetPath();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_LoadStringArrayFromFile();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_LoadTexture2D_FromDDSFile();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_LoadTexture2D_FromFileByExtension();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Loops_ResetBPRunawayCounter();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_MapRangeClamped();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_MaxOfFloatArray();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_MaxOfIntArray();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_MinOfFloatArray();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_MinOfIntArray();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Mobility__SetSceneCompMobility();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_NotEqual_Vector2DVector2D();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Open_URL_In_Web_Browser();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_OperatingSystem__GetCurrentPlatform();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_OptionsMenu__GetDisplayAdapterScreenResolutions();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Physics__EnterRagDoll();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Physics__GetLocationofRagDoll();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Physics__InitializeVictoryRagDoll();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Physics__IsRagDoll();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Physics__LeaveRagDoll();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Physics__UpdateCharacterCameraToRagdollLocation();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_PlayerController_GetControllerID();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_PlayerState_GetPlayerID();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_PlaySoundAtLocationFromFile();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_PlaySoundAttachedFromFile();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_PointDistanceToPlane();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_ProjectWorldToScreenPosition();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RandBool_Bernoulli();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RandBool_Bernoulli_MT();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RandFloat_MINMAX_uniDis();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RandFloat_MINMAX_uniDis_MT();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RandFloat_uniDis();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RandFloat_uniDis_MT();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RandInt_MINMAX_uniDis();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RandInt_MINMAX_uniDis_MT();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RandInt_uniDis();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RandInt_uniDis_MT();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RealWorldTime__GetCurrentOSTime();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RealWorldTime__GetDifferenceBetweenTimes();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RealWorldTime__GetTimePassedSincePreviousTime();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RemoveAllWidgetsOfClass();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_RemoveFromStreamingLevels();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Rendering__FreezeGameRendering();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Rendering__UnFreezeGameRendering();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_SaveGameObject_GetAllSaveSlotFileNames();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_ScreenShots_Rename_Move_Most_Recent();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_seedRand();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_seedRandWithEntropy();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_seedRandWithTime();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Selection_SelectionBox();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_ServerTravel();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_SetBloomIntensity();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_SetComponentTickRate();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_SetGenericTeamId();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_SpawnActorIntoLevel();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_String__CombineStrings();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_String__CombineStrings_Multi();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_String__ExplodeString();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_StringConversion__GetFloatAsStringWithPrecision();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_StringIsEmpty();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Text_IsNumeric();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Text_ToFloat();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Text_ToInt();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_TraceData__GetTraceDataFromCharacterSocket();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_TraceData__GetTraceDataFromSkeletalMeshSocket();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Traces__CharacterMeshTrace___ClosestBone();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Traces__CharacterMeshTrace___ClosestSocket();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_TransformVectorToActorSpace();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_TransformVectorToActorSpaceAngle();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_UnloadStreamingLevel();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_UTCToLocal();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Vector2DInterpTo();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Vector2DInterpTo_Constant();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VerticalFOV();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_AI_MoveToWithFilter();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_Get_Pixel();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_GetGPUBrand();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_GetGPUInfo();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_GetGRHIAdapterName();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_GetPixelFromT2D();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_GetPixelsArrayFromT2D();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_GetStringFromOSClipboard();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_LoadTexture2D_FromFile();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_LoadTexture2D_FromFile_Pixels();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_SavePixels();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_SaveStringToOSClipboard();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Victory_SecondsToHoursMinutesSeconds();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryAppendInline();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryCreateProc();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryDestructible_DestroyChunk();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryFloatMinusEquals();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryFloatPlusEquals();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetAllActionKeyBindings();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetAllAxisAndActionMappingsForKey();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetAllAxisKeyBindings();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetApplicationName();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetCustomConfigVar_Bool();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetCustomConfigVar_Color();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetCustomConfigVar_Float();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetCustomConfigVar_Int();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetCustomConfigVar_Rotator();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetCustomConfigVar_String();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetCustomConfigVar_Vector();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetCustomConfigVar_Vector2D();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetSoundVolume();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetVictoryInput();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryGetVictoryInputAxis();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryIntMinusEquals();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryIntPlusEquals();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryIsApplicationRunning();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryISM_ConvertToVictoryISMActors();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryISM_GetAllVictoryISMActors();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryLoadLevelInstance();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryPaths__ConfigDir();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryPaths__GameRootDirectory();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryPaths__LogsDir();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryPaths__SavedDir();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryPaths__ScreenShotsDir();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryPaths__Win64Dir_BinaryLocation();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryPaths__WindowsNoEditorDir();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryPhysics_UpdateAngularDamping();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryReBindActionKey();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryReBindAxisKey();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryRemoveActionKeyBind();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictoryRemoveAxisKeyBind();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySetCustomConfigVar_Bool();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySetCustomConfigVar_Color();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySetCustomConfigVar_Float();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySetCustomConfigVar_Int();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySetCustomConfigVar_Rotator();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySetCustomConfigVar_String();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySetCustomConfigVar_Vector();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySetCustomConfigVar_Vector2D();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySimulateKeyPress();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySimulateMouseWheel();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySortFloatArray();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySortIntArray();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_VictorySoundVolumeChange();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Viewport__EnableWorldRendering();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Viewport__GetCenterOfViewport();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Viewport__GetMousePosition();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Viewport__SetMousePosition();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_ViewportPositionDeproject();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Visibility__GetNotRenderedActors();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_Visibility__GetRenderedActors();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_WidgetGetChildrenOfClass();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_WidgetGetParentOfClass();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_WidgetIsChildOf();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_WorldType__InEditorWorld();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_WorldType__InGameInstanceWorld();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPFunctionLibrary_WorldType__InPIEWorld();
	VICTORYBPLIBRARY_API class UClass* Z_Construct_UClass_UVictoryBPFunctionLibrary_NoRegister();
	VICTORYBPLIBRARY_API class UClass* Z_Construct_UClass_UVictoryBPFunctionLibrary();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPHTML_IsHTML();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryBPHTML_VictoryHTML5_SetCursorVisible();
	VICTORYBPLIBRARY_API class UClass* Z_Construct_UClass_UVictoryBPHTML_NoRegister();
	VICTORYBPLIBRARY_API class UClass* Z_Construct_UClass_UVictoryBPHTML();
	VICTORYBPLIBRARY_API class UScriptStruct* Z_Construct_UScriptStruct_FVictorySubtitleCue();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_AVictoryPC_OnVictorySubtitlesQueued();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_AVictoryPC_Subtitles_CPPDelegate();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_AVictoryPC_VictoryPC_GetMyIP_DataReceived();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_AVictoryPC_VictoryPC_GetMyIP_SendRequest();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_AVictoryPC_VictoryPlaySpeechSound();
	VICTORYBPLIBRARY_API class UClass* Z_Construct_UClass_AVictoryPC_NoRegister();
	VICTORYBPLIBRARY_API class UClass* Z_Construct_UClass_AVictoryPC();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Float__AddPair();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Float__Clear();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Float__Get();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Float__Remove();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__AddPair();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__Clear();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__Get();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__Remove();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Actor__AddPair();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Actor__Clear();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Actor__Get();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Actor__Remove();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Int__AddPair();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Int__Clear();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Int__Get();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Int__Remove();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__AddPair();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__Clear();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__Get();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__Remove();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_String__AddPair();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_String__Clear();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_String__Get();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_String__Remove();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Vector__AddPair();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Vector__Clear();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Vector__Get();
	VICTORYBPLIBRARY_API class UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Vector__Remove();
	VICTORYBPLIBRARY_API class UClass* Z_Construct_UClass_UVictoryTMapComp_NoRegister();
	VICTORYBPLIBRARY_API class UClass* Z_Construct_UClass_UVictoryTMapComp();
	VICTORYBPLIBRARY_API class UPackage* Z_Construct_UPackage__Script_VictoryBPLibrary();
	void UVictoryBPHTML::StaticRegisterNativesUVictoryBPHTML()
	{
		UClass* Class = UVictoryBPHTML::StaticClass();
		static const TNameNativePtrPair<ANSICHAR> AnsiFuncs[] = {
			{ "IsHTML", (Native)&UVictoryBPHTML::execIsHTML },
			{ "VictoryHTML5_SetCursorVisible", (Native)&UVictoryBPHTML::execVictoryHTML5_SetCursorVisible },
		};
		FNativeFunctionRegistrar::RegisterFunctions(Class, AnsiFuncs, 2);
	}
	UFunction* Z_Construct_UFunction_UVictoryBPHTML_IsHTML()
	{
		struct VictoryBPHTML_eventIsHTML_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPHTML();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsHTML"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(VictoryBPHTML_eventIsHTML_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryBPHTML_eventIsHTML_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryBPHTML_eventIsHTML_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryBPHTML_eventIsHTML_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|HTML5"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPHTML.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Is the current OS HTML5? This code will only run in games packaged for HTML5, it will not run in Editor builds :) Use this to customize particle FX for HTML5 vs PC builds! Or for any custom HTML5-specific game logic! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryBPHTML_VictoryHTML5_SetCursorVisible()
	{
		struct VictoryBPHTML_eventVictoryHTML5_SetCursorVisible_Parms
		{
			bool MakeVisible;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryBPHTML();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryHTML5_SetCursorVisible"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(VictoryBPHTML_eventVictoryHTML5_SetCursorVisible_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(MakeVisible, VictoryBPHTML_eventVictoryHTML5_SetCursorVisible_Parms, bool);
			UProperty* NewProp_MakeVisible = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MakeVisible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(MakeVisible, VictoryBPHTML_eventVictoryHTML5_SetCursorVisible_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(MakeVisible, VictoryBPHTML_eventVictoryHTML5_SetCursorVisible_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|HTML5"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPHTML.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UVictoryBPHTML_NoRegister()
	{
		return UVictoryBPHTML::StaticClass();
	}
	UClass* Z_Construct_UClass_UVictoryBPHTML()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage__Script_VictoryBPLibrary();
			OuterClass = UVictoryBPHTML::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;

				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryBPHTML_IsHTML());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryBPHTML_VictoryHTML5_SetCursorVisible());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryBPHTML_IsHTML(), "IsHTML"); // 2604232622
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryBPHTML_VictoryHTML5_SetCursorVisible(), "VictoryHTML5_SetCursorVisible"); // 3406664541
				static TCppClassTypeInfo<TCppClassTypeTraits<UVictoryBPHTML> > StaticCppClassTypeInfo;
				OuterClass->SetCppTypeInfo(&StaticCppClassTypeInfo);
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("VictoryBPHTML.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/VictoryBPHTML.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("note about UBlueprintFunctionLibrary\n This class is a base class for any function libraries exposed to blueprints.\n Methods in subclasses are expected to be static, and no methods should be added to the base class."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	IMPLEMENT_CLASS(UVictoryBPHTML, 1332212395);
	static FCompiledInDefer Z_CompiledInDefer_UClass_UVictoryBPHTML(Z_Construct_UClass_UVictoryBPHTML, &UVictoryBPHTML::StaticClass, TEXT("/Script/VictoryBPLibrary"), TEXT("UVictoryBPHTML"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UVictoryBPHTML);
class UScriptStruct* FVictorySubtitleCue::StaticStruct()
{
	extern VICTORYBPLIBRARY_API class UPackage* Z_Construct_UPackage__Script_VictoryBPLibrary();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern VICTORYBPLIBRARY_API class UScriptStruct* Z_Construct_UScriptStruct_FVictorySubtitleCue();
		extern VICTORYBPLIBRARY_API uint32 Get_Z_Construct_UScriptStruct_FVictorySubtitleCue_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FVictorySubtitleCue, Z_Construct_UPackage__Script_VictoryBPLibrary(), TEXT("VictorySubtitleCue"), sizeof(FVictorySubtitleCue), Get_Z_Construct_UScriptStruct_FVictorySubtitleCue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FVictorySubtitleCue(FVictorySubtitleCue::StaticStruct, TEXT("/Script/VictoryBPLibrary"), TEXT("VictorySubtitleCue"), false, nullptr, nullptr);
static struct FScriptStruct_VictoryBPLibrary_StaticRegisterNativesFVictorySubtitleCue
{
	FScriptStruct_VictoryBPLibrary_StaticRegisterNativesFVictorySubtitleCue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("VictorySubtitleCue")),new UScriptStruct::TCppStructOps<FVictorySubtitleCue>);
	}
} ScriptStruct_VictoryBPLibrary_StaticRegisterNativesFVictorySubtitleCue;
	UScriptStruct* Z_Construct_UScriptStruct_FVictorySubtitleCue()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_VictoryBPLibrary();
		extern uint32 Get_Z_Construct_UScriptStruct_FVictorySubtitleCue_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("VictorySubtitleCue"), sizeof(FVictorySubtitleCue), Get_Z_Construct_UScriptStruct_FVictorySubtitleCue_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictorySubtitleCue"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FVictorySubtitleCue>, EStructFlags(0x00000001));
			UProperty* NewProp_Time = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Time"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Time, FVictorySubtitleCue), 0x0010000000000005);
			UProperty* NewProp_SubtitleText = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubtitleText"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(SubtitleText, FVictorySubtitleCue), 0x0010000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/VictoryPC.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Exposing the UE4 Subtitle system for Solus\n <3 Rama"));
			MetaData->SetValue(NewProp_Time, TEXT("Category"), TEXT("SubtitleCue"));
			MetaData->SetValue(NewProp_Time, TEXT("ModuleRelativePath"), TEXT("Public/VictoryPC.h"));
			MetaData->SetValue(NewProp_Time, TEXT("ToolTip"), TEXT("The time at which the subtitle is to be displayed, in seconds relative to the beginning of the line."));
			MetaData->SetValue(NewProp_SubtitleText, TEXT("Category"), TEXT("SubtitleCue"));
			MetaData->SetValue(NewProp_SubtitleText, TEXT("ModuleRelativePath"), TEXT("Public/VictoryPC.h"));
			MetaData->SetValue(NewProp_SubtitleText, TEXT("ToolTip"), TEXT("The text to appear in the subtitle."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FVictorySubtitleCue_CRC() { return 41595051U; }
	static FName NAME_AVictoryPC_OnVictorySubtitlesQueued = FName(TEXT("OnVictorySubtitlesQueued"));
	void AVictoryPC::OnVictorySubtitlesQueued(TArray<FVictorySubtitleCue> const& VictorySubtitles, float CueDuration)
	{
		VictoryPC_eventOnVictorySubtitlesQueued_Parms Parms;
		Parms.VictorySubtitles=VictorySubtitles;
		Parms.CueDuration=CueDuration;
		ProcessEvent(FindFunctionChecked(NAME_AVictoryPC_OnVictorySubtitlesQueued),&Parms);
	}
	static FName NAME_AVictoryPC_VictoryPC_GetMyIP_DataReceived = FName(TEXT("VictoryPC_GetMyIP_DataReceived"));
	void AVictoryPC::VictoryPC_GetMyIP_DataReceived(const FString& YourIP)
	{
		VictoryPC_eventVictoryPC_GetMyIP_DataReceived_Parms Parms;
		Parms.YourIP=YourIP;
		ProcessEvent(FindFunctionChecked(NAME_AVictoryPC_VictoryPC_GetMyIP_DataReceived),&Parms);
	}
	void AVictoryPC::StaticRegisterNativesAVictoryPC()
	{
		UClass* Class = AVictoryPC::StaticClass();
		static const TNameNativePtrPair<ANSICHAR> AnsiFuncs[] = {
			{ "Subtitles_CPPDelegate", (Native)&AVictoryPC::execSubtitles_CPPDelegate },
			{ "VictoryPC_GetMyIP_SendRequest", (Native)&AVictoryPC::execVictoryPC_GetMyIP_SendRequest },
			{ "VictoryPlaySpeechSound", (Native)&AVictoryPC::execVictoryPlaySpeechSound },
		};
		FNativeFunctionRegistrar::RegisterFunctions(Class, AnsiFuncs, 3);
	}
	UFunction* Z_Construct_UFunction_AVictoryPC_OnVictorySubtitlesQueued()
	{
		UObject* Outer=Z_Construct_UClass_AVictoryPC();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnVictorySubtitlesQueued"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08420800, 65535, sizeof(VictoryPC_eventOnVictorySubtitlesQueued_Parms));
			UProperty* NewProp_CueDuration = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CueDuration"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(CueDuration, VictoryPC_eventOnVictorySubtitlesQueued_Parms), 0x0010000000000080);
			UProperty* NewProp_VictorySubtitles = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("VictorySubtitles"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(VictorySubtitles, VictoryPC_eventOnVictorySubtitlesQueued_Parms), 0x0010000008000182);
			UProperty* NewProp_VictorySubtitles_Inner = new(EC_InternalUseOnlyConstructor, NewProp_VictorySubtitles, TEXT("VictorySubtitles"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVictorySubtitleCue());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory Subtitles"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryPC.h"));
			MetaData->SetValue(NewProp_VictorySubtitles, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AVictoryPC_Subtitles_CPPDelegate()
	{
		struct VictoryPC_eventSubtitles_CPPDelegate_Parms
		{
			TArray<FSubtitleCue> VictorySubtitles;
			float CueDuration;
		};
		UObject* Outer=Z_Construct_UClass_AVictoryPC();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Subtitles_CPPDelegate"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00420401, 65535, sizeof(VictoryPC_eventSubtitles_CPPDelegate_Parms));
			UProperty* NewProp_CueDuration = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CueDuration"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(CueDuration, VictoryPC_eventSubtitles_CPPDelegate_Parms), 0x0010000000000080);
			UProperty* NewProp_VictorySubtitles = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("VictorySubtitles"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(VictorySubtitles, VictoryPC_eventSubtitles_CPPDelegate_Parms), 0x0010000008000182);
			UProperty* NewProp_VictorySubtitles_Inner = new(EC_InternalUseOnlyConstructor, NewProp_VictorySubtitles, TEXT("VictorySubtitles"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FSubtitleCue());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryPC.h"));
			MetaData->SetValue(NewProp_VictorySubtitles, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AVictoryPC_VictoryPC_GetMyIP_DataReceived()
	{
		UObject* Outer=Z_Construct_UClass_AVictoryPC();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryPC_GetMyIP_DataReceived"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(VictoryPC_eventVictoryPC_GetMyIP_DataReceived_Parms));
			UProperty* NewProp_YourIP = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("YourIP"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(YourIP, VictoryPC_eventVictoryPC_GetMyIP_DataReceived_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory PC"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Victory PC ~ GetMyIP ~ Data Received!"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryPC.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Implement this event to receive your IP once the request is processed! This requires that your computer has a live internet connection"));
			MetaData->SetValue(NewProp_YourIP, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AVictoryPC_VictoryPC_GetMyIP_SendRequest()
	{
		struct VictoryPC_eventVictoryPC_GetMyIP_SendRequest_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AVictoryPC();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryPC_GetMyIP_SendRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VictoryPC_eventVictoryPC_GetMyIP_SendRequest_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, VictoryPC_eventVictoryPC_GetMyIP_SendRequest_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, VictoryPC_eventVictoryPC_GetMyIP_SendRequest_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, VictoryPC_eventVictoryPC_GetMyIP_SendRequest_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory PC"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryPC.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("This node relies on http://api.ipify.org, so if this node ever stops working, check out http://api.ipify.org.  Returns false if the operation could not occur because HTTP module was not loaded or unable to process request."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AVictoryPC_VictoryPlaySpeechSound()
	{
		struct VictoryPC_eventVictoryPlaySpeechSound_Parms
		{
			USoundBase* Sound;
			float VolumeMultiplier;
			float PitchMultiplier;
			float StartTime;
			UAudioComponent* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AVictoryPC();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("VictoryPlaySpeechSound"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020409, 65535, sizeof(VictoryPC_eventVictoryPlaySpeechSound_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryPC_eventVictoryPlaySpeechSound_Parms), 0x0010000000080588, Z_Construct_UClass_UAudioComponent_NoRegister());
			UProperty* NewProp_StartTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("StartTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(StartTime, VictoryPC_eventVictoryPlaySpeechSound_Parms), 0x0010000000000080);
			UProperty* NewProp_PitchMultiplier = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PitchMultiplier"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(PitchMultiplier, VictoryPC_eventVictoryPlaySpeechSound_Parms), 0x0010000000000080);
			UProperty* NewProp_VolumeMultiplier = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("VolumeMultiplier"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(VolumeMultiplier, VictoryPC_eventVictoryPlaySpeechSound_Parms), 0x0010000000000080);
			UProperty* NewProp_Sound = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Sound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Sound, VictoryPC_eventVictoryPlaySpeechSound_Parms), 0x0010000000000080, Z_Construct_UClass_USoundBase_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory Subtitles"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_PitchMultiplier"), TEXT("1.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_StartTime"), TEXT("0.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_VolumeMultiplier"), TEXT("1.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("play"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryPC.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("When the sound is played OnVictorySubtitlesQueued will be called with the subtitles!\nYou can bind an event off of the audio component for OnAudioFinished to know hwen the sound is done!"));
			MetaData->SetValue(ReturnFunction, TEXT("UnsafeDuringActorConstruction"), TEXT("true"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AVictoryPC_NoRegister()
	{
		return AVictoryPC::StaticClass();
	}
	UClass* Z_Construct_UClass_AVictoryPC()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APlayerController();
			Z_Construct_UPackage__Script_VictoryBPLibrary();
			OuterClass = AVictoryPC::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900284;

				OuterClass->LinkChild(Z_Construct_UFunction_AVictoryPC_OnVictorySubtitlesQueued());
				OuterClass->LinkChild(Z_Construct_UFunction_AVictoryPC_Subtitles_CPPDelegate());
				OuterClass->LinkChild(Z_Construct_UFunction_AVictoryPC_VictoryPC_GetMyIP_DataReceived());
				OuterClass->LinkChild(Z_Construct_UFunction_AVictoryPC_VictoryPC_GetMyIP_SendRequest());
				OuterClass->LinkChild(Z_Construct_UFunction_AVictoryPC_VictoryPlaySpeechSound());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AVictoryPC_OnVictorySubtitlesQueued(), "OnVictorySubtitlesQueued"); // 1650022130
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AVictoryPC_Subtitles_CPPDelegate(), "Subtitles_CPPDelegate"); // 3950642773
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AVictoryPC_VictoryPC_GetMyIP_DataReceived(), "VictoryPC_GetMyIP_DataReceived"); // 1778906253
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AVictoryPC_VictoryPC_GetMyIP_SendRequest(), "VictoryPC_GetMyIP_SendRequest"); // 1549296878
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AVictoryPC_VictoryPlaySpeechSound(), "VictoryPlaySpeechSound"); // 3981815607
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				static TCppClassTypeInfo<TCppClassTypeTraits<AVictoryPC> > StaticCppClassTypeInfo;
				OuterClass->SetCppTypeInfo(&StaticCppClassTypeInfo);
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("VictoryPC.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/VictoryPC.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	IMPLEMENT_CLASS(AVictoryPC, 109628773);
	static FCompiledInDefer Z_CompiledInDefer_UClass_AVictoryPC(Z_Construct_UClass_AVictoryPC, &AVictoryPC::StaticClass, TEXT("/Script/VictoryBPLibrary"), TEXT("AVictoryPC"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AVictoryPC);
	void UVictoryTMapComp::StaticRegisterNativesUVictoryTMapComp()
	{
		UClass* Class = UVictoryTMapComp::StaticClass();
		static const TNameNativePtrPair<ANSICHAR> AnsiFuncs[] = {
			{ "Int_Float__AddPair", (Native)&UVictoryTMapComp::execInt_Float__AddPair },
			{ "Int_Float__Clear", (Native)&UVictoryTMapComp::execInt_Float__Clear },
			{ "Int_Float__Get", (Native)&UVictoryTMapComp::execInt_Float__Get },
			{ "Int_Float__Remove", (Native)&UVictoryTMapComp::execInt_Float__Remove },
			{ "Int_Vector__AddPair", (Native)&UVictoryTMapComp::execInt_Vector__AddPair },
			{ "Int_Vector__Clear", (Native)&UVictoryTMapComp::execInt_Vector__Clear },
			{ "Int_Vector__Get", (Native)&UVictoryTMapComp::execInt_Vector__Get },
			{ "Int_Vector__Remove", (Native)&UVictoryTMapComp::execInt_Vector__Remove },
			{ "String_Actor__AddPair", (Native)&UVictoryTMapComp::execString_Actor__AddPair },
			{ "String_Actor__Clear", (Native)&UVictoryTMapComp::execString_Actor__Clear },
			{ "String_Actor__Get", (Native)&UVictoryTMapComp::execString_Actor__Get },
			{ "String_Actor__Remove", (Native)&UVictoryTMapComp::execString_Actor__Remove },
			{ "String_Int__AddPair", (Native)&UVictoryTMapComp::execString_Int__AddPair },
			{ "String_Int__Clear", (Native)&UVictoryTMapComp::execString_Int__Clear },
			{ "String_Int__Get", (Native)&UVictoryTMapComp::execString_Int__Get },
			{ "String_Int__Remove", (Native)&UVictoryTMapComp::execString_Int__Remove },
			{ "String_Rotator__AddPair", (Native)&UVictoryTMapComp::execString_Rotator__AddPair },
			{ "String_Rotator__Clear", (Native)&UVictoryTMapComp::execString_Rotator__Clear },
			{ "String_Rotator__Get", (Native)&UVictoryTMapComp::execString_Rotator__Get },
			{ "String_Rotator__Remove", (Native)&UVictoryTMapComp::execString_Rotator__Remove },
			{ "String_String__AddPair", (Native)&UVictoryTMapComp::execString_String__AddPair },
			{ "String_String__Clear", (Native)&UVictoryTMapComp::execString_String__Clear },
			{ "String_String__Get", (Native)&UVictoryTMapComp::execString_String__Get },
			{ "String_String__Remove", (Native)&UVictoryTMapComp::execString_String__Remove },
			{ "String_Vector__AddPair", (Native)&UVictoryTMapComp::execString_Vector__AddPair },
			{ "String_Vector__Clear", (Native)&UVictoryTMapComp::execString_Vector__Clear },
			{ "String_Vector__Get", (Native)&UVictoryTMapComp::execString_Vector__Get },
			{ "String_Vector__Remove", (Native)&UVictoryTMapComp::execString_Vector__Remove },
		};
		FNativeFunctionRegistrar::RegisterFunctions(Class, AnsiFuncs, 28);
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Float__AddPair()
	{
		struct VictoryTMapComp_eventInt_Float__AddPair_Parms
		{
			int32 Key;
			float Value;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Int_Float__AddPair"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VictoryTMapComp_eventInt_Float__AddPair_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, VictoryTMapComp_eventInt_Float__AddPair_Parms), 0x0010000000000080);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventInt_Float__AddPair_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Add"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("If a key already exists in the TMap, its current value is replaced with your new value! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Float__Clear()
	{
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Int_Float__Clear"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Clear"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Clear Empty Reset"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes every entry from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Float__Get()
	{
		struct VictoryTMapComp_eventInt_Float__Get_Parms
		{
			int32 Key;
			bool IsValid;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Int_Float__Get"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14420401, 65535, sizeof(VictoryTMapComp_eventInt_Float__Get_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryTMapComp_eventInt_Float__Get_Parms), 0x0010000000000580);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryTMapComp_eventInt_Float__Get_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryTMapComp_eventInt_Float__Get_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryTMapComp_eventInt_Float__Get_Parms), sizeof(bool), true);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventInt_Float__Get_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Get"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the value associated with they key at fastest possible speed! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Float__Remove()
	{
		struct VictoryTMapComp_eventInt_Float__Remove_Parms
		{
			int32 Key;
			float Value;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Int_Float__Remove"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VictoryTMapComp_eventInt_Float__Remove_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, VictoryTMapComp_eventInt_Float__Remove_Parms), 0x0010000000000080);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventInt_Float__Remove_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Remove"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes the key and any associated value from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__AddPair()
	{
		struct VictoryTMapComp_eventInt_Vector__AddPair_Parms
		{
			int32 Key;
			FVector Value;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Int_Vector__AddPair"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(VictoryTMapComp_eventInt_Vector__AddPair_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, VictoryTMapComp_eventInt_Vector__AddPair_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventInt_Vector__AddPair_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Add"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("If a key already exists in the TMap, its current value is replaced with your new value! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__Clear()
	{
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Int_Vector__Clear"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Clear"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Clear Empty Reset"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes every entry from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__Get()
	{
		struct VictoryTMapComp_eventInt_Vector__Get_Parms
		{
			int32 Key;
			bool IsValid;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Int_Vector__Get"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C20401, 65535, sizeof(VictoryTMapComp_eventInt_Vector__Get_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryTMapComp_eventInt_Vector__Get_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryTMapComp_eventInt_Vector__Get_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryTMapComp_eventInt_Vector__Get_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryTMapComp_eventInt_Vector__Get_Parms), sizeof(bool), true);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventInt_Vector__Get_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Get"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the value associated with they key at fastest possible speed! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__Remove()
	{
		struct VictoryTMapComp_eventInt_Vector__Remove_Parms
		{
			int32 Key;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Int_Vector__Remove"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VictoryTMapComp_eventInt_Vector__Remove_Parms));
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventInt_Vector__Remove_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Remove"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes the key and any associated value from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Actor__AddPair()
	{
		struct VictoryTMapComp_eventString_Actor__AddPair_Parms
		{
			FString Key;
			AActor* Value;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Actor__AddPair"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VictoryTMapComp_eventString_Actor__AddPair_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Value, VictoryTMapComp_eventString_Actor__AddPair_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_Actor__AddPair_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Add"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("If a key already exists in the TMap, its current value is replaced with your new value! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Actor__Clear()
	{
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Actor__Clear"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Clear"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Clear Empty Reset"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes every entry from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Actor__Get()
	{
		struct VictoryTMapComp_eventString_Actor__Get_Parms
		{
			FString Key;
			bool IsValid;
			AActor* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Actor__Get"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14420401, 65535, sizeof(VictoryTMapComp_eventString_Actor__Get_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryTMapComp_eventString_Actor__Get_Parms), 0x0010000000000580, Z_Construct_UClass_AActor_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryTMapComp_eventString_Actor__Get_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryTMapComp_eventString_Actor__Get_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryTMapComp_eventString_Actor__Get_Parms), sizeof(bool), true);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_Actor__Get_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Get"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the value associated with they key at fastest possible speed! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Actor__Remove()
	{
		struct VictoryTMapComp_eventString_Actor__Remove_Parms
		{
			FString Key;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Actor__Remove"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VictoryTMapComp_eventString_Actor__Remove_Parms));
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_Actor__Remove_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Remove"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes the key and any associated value from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Int__AddPair()
	{
		struct VictoryTMapComp_eventString_Int__AddPair_Parms
		{
			FString Key;
			int32 Value;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Int__AddPair"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VictoryTMapComp_eventString_Int__AddPair_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Value, VictoryTMapComp_eventString_Int__AddPair_Parms), 0x0010000000000080);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_Int__AddPair_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Add"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("If a key already exists in the TMap, its current value is replaced with your new value! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Int__Clear()
	{
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Int__Clear"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Clear"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Clear Empty Reset"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes every entry from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Int__Get()
	{
		struct VictoryTMapComp_eventString_Int__Get_Parms
		{
			FString Key;
			bool IsValid;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Int__Get"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14420401, 65535, sizeof(VictoryTMapComp_eventString_Int__Get_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryTMapComp_eventString_Int__Get_Parms), 0x0010000000000580);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryTMapComp_eventString_Int__Get_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryTMapComp_eventString_Int__Get_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryTMapComp_eventString_Int__Get_Parms), sizeof(bool), true);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_Int__Get_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Get"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the value associated with they key at fastest possible speed! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Int__Remove()
	{
		struct VictoryTMapComp_eventString_Int__Remove_Parms
		{
			FString Key;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Int__Remove"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VictoryTMapComp_eventString_Int__Remove_Parms));
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_Int__Remove_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Remove"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes the key and any associated value from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__AddPair()
	{
		struct VictoryTMapComp_eventString_Rotator__AddPair_Parms
		{
			FString Key;
			FRotator Value;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Rotator__AddPair"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(VictoryTMapComp_eventString_Rotator__AddPair_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, VictoryTMapComp_eventString_Rotator__AddPair_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_Rotator__AddPair_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Add"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("If a key already exists in the TMap, its current value is replaced with your new value! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__Clear()
	{
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Rotator__Clear"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Clear"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Clear Empty Reset"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes every entry from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__Get()
	{
		struct VictoryTMapComp_eventString_Rotator__Get_Parms
		{
			FString Key;
			bool IsValid;
			FRotator ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Rotator__Get"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C20401, 65535, sizeof(VictoryTMapComp_eventString_Rotator__Get_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryTMapComp_eventString_Rotator__Get_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FRotator());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryTMapComp_eventString_Rotator__Get_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryTMapComp_eventString_Rotator__Get_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryTMapComp_eventString_Rotator__Get_Parms), sizeof(bool), true);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_Rotator__Get_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Get"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the value associated with they key at fastest possible speed! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__Remove()
	{
		struct VictoryTMapComp_eventString_Rotator__Remove_Parms
		{
			FString Key;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Rotator__Remove"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VictoryTMapComp_eventString_Rotator__Remove_Parms));
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_Rotator__Remove_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Remove"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes the key and any associated value from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_String__AddPair()
	{
		struct VictoryTMapComp_eventString_String__AddPair_Parms
		{
			FString Key;
			FString Value;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_String__AddPair"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VictoryTMapComp_eventString_String__AddPair_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Value, VictoryTMapComp_eventString_String__AddPair_Parms), 0x0010000000000080);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_String__AddPair_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Add"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("If a key already exists in the TMap, its current value is replaced with your new value! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_String__Clear()
	{
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_String__Clear"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Clear"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Clear Empty Reset"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes every entry from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_String__Get()
	{
		struct VictoryTMapComp_eventString_String__Get_Parms
		{
			FString Key;
			bool IsValid;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_String__Get"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14420401, 65535, sizeof(VictoryTMapComp_eventString_String__Get_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryTMapComp_eventString_String__Get_Parms), 0x0010000000000580);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryTMapComp_eventString_String__Get_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryTMapComp_eventString_String__Get_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryTMapComp_eventString_String__Get_Parms), sizeof(bool), true);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_String__Get_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Get"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the value associated with they key at fastest possible speed! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_String__Remove()
	{
		struct VictoryTMapComp_eventString_String__Remove_Parms
		{
			FString Key;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_String__Remove"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VictoryTMapComp_eventString_String__Remove_Parms));
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_String__Remove_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Remove"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes the key and any associated value from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Vector__AddPair()
	{
		struct VictoryTMapComp_eventString_Vector__AddPair_Parms
		{
			FString Key;
			FVector Value;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Vector__AddPair"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(VictoryTMapComp_eventString_Vector__AddPair_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Value, VictoryTMapComp_eventString_Vector__AddPair_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_Vector__AddPair_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Add"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("If a key already exists in the TMap, its current value is replaced with your new value! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Vector__Clear()
	{
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Vector__Clear"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Clear"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Clear Empty Reset"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes every entry from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Vector__Get()
	{
		struct VictoryTMapComp_eventString_Vector__Get_Parms
		{
			FString Key;
			bool IsValid;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Vector__Get"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C20401, 65535, sizeof(VictoryTMapComp_eventString_Vector__Get_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, VictoryTMapComp_eventString_Vector__Get_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsValid, VictoryTMapComp_eventString_Vector__Get_Parms, bool);
			UProperty* NewProp_IsValid = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsValid"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsValid, VictoryTMapComp_eventString_Vector__Get_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(IsValid, VictoryTMapComp_eventString_Vector__Get_Parms), sizeof(bool), true);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_Vector__Get_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Get"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the value associated with they key at fastest possible speed! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UVictoryTMapComp_String_Vector__Remove()
	{
		struct VictoryTMapComp_eventString_Vector__Remove_Parms
		{
			FString Key;
		};
		UObject* Outer=Z_Construct_UClass_UVictoryTMapComp();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("String_Vector__Remove"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(VictoryTMapComp_eventString_Vector__Remove_Parms));
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, VictoryTMapComp_eventString_Vector__Remove_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Victory BP Library|TMap Component|Remove"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Removes the key and any associated value from the TMap! <3 Rama"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UVictoryTMapComp_NoRegister()
	{
		return UVictoryTMapComp::StaticClass();
	}
	UClass* Z_Construct_UClass_UVictoryTMapComp()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_VictoryBPLibrary();
			OuterClass = UVictoryTMapComp::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;

				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_Int_Float__AddPair());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_Int_Float__Clear());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_Int_Float__Get());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_Int_Float__Remove());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__AddPair());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__Clear());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__Get());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__Remove());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Actor__AddPair());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Actor__Clear());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Actor__Get());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Actor__Remove());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Int__AddPair());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Int__Clear());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Int__Get());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Int__Remove());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__AddPair());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__Clear());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__Get());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__Remove());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_String__AddPair());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_String__Clear());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_String__Get());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_String__Remove());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Vector__AddPair());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Vector__Clear());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Vector__Get());
				OuterClass->LinkChild(Z_Construct_UFunction_UVictoryTMapComp_String_Vector__Remove());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_Int_Float__AddPair(), "Int_Float__AddPair"); // 871216583
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_Int_Float__Clear(), "Int_Float__Clear"); // 2419582514
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_Int_Float__Get(), "Int_Float__Get"); // 318842945
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_Int_Float__Remove(), "Int_Float__Remove"); // 4050389980
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__AddPair(), "Int_Vector__AddPair"); // 302658645
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__Clear(), "Int_Vector__Clear"); // 3641808650
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__Get(), "Int_Vector__Get"); // 3054452286
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_Int_Vector__Remove(), "Int_Vector__Remove"); // 835052913
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Actor__AddPair(), "String_Actor__AddPair"); // 1196494415
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Actor__Clear(), "String_Actor__Clear"); // 2749029861
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Actor__Get(), "String_Actor__Get"); // 4056161636
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Actor__Remove(), "String_Actor__Remove"); // 392876657
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Int__AddPair(), "String_Int__AddPair"); // 3496559061
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Int__Clear(), "String_Int__Clear"); // 3765270841
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Int__Get(), "String_Int__Get"); // 468101772
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Int__Remove(), "String_Int__Remove"); // 3803909512
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__AddPair(), "String_Rotator__AddPair"); // 4066582201
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__Clear(), "String_Rotator__Clear"); // 2019463622
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__Get(), "String_Rotator__Get"); // 3337054326
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Rotator__Remove(), "String_Rotator__Remove"); // 1200856380
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_String__AddPair(), "String_String__AddPair"); // 870845979
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_String__Clear(), "String_String__Clear"); // 2719719201
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_String__Get(), "String_String__Get"); // 3810095985
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_String__Remove(), "String_String__Remove"); // 3351671350
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Vector__AddPair(), "String_Vector__AddPair"); // 3916824424
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Vector__Clear(), "String_Vector__Clear"); // 280430899
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Vector__Get(), "String_Vector__Get"); // 3338339184
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UVictoryTMapComp_String_Vector__Remove(), "String_Vector__Remove"); // 557745269
				static TCppClassTypeInfo<TCppClassTypeTraits<UVictoryTMapComp> > StaticCppClassTypeInfo;
				OuterClass->SetCppTypeInfo(&StaticCppClassTypeInfo);
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("VictoryBPLibrary"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("VictoryTMapComp.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/VictoryTMapComp.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	IMPLEMENT_CLASS(UVictoryTMapComp, 2120730665);
	static FCompiledInDefer Z_CompiledInDefer_UClass_UVictoryTMapComp(Z_Construct_UClass_UVictoryTMapComp, &UVictoryTMapComp::StaticClass, TEXT("/Script/VictoryBPLibrary"), TEXT("UVictoryTMapComp"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UVictoryTMapComp);
	UPackage* Z_Construct_UPackage__Script_VictoryBPLibrary()
	{
		static UPackage* ReturnPackage = nullptr;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), nullptr, FName(TEXT("/Script/VictoryBPLibrary")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x5059402A;
			Guid.B = 0x4062F6EB;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif
PRAGMA_ENABLE_DEPRECATION_WARNINGS
#ifdef _MSC_VER
#pragma warning (pop)
#endif
PRAGMA_ENABLE_OPTIMIZATION
